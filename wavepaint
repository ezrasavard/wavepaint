#!/usr/bin/python3

import matplotlib.pyplot as plt
import numpy as np
import os
import sys

from scipy import signal
from scipy.io import wavfile

def plot_LPF(b, a, fs, f_high):
  # frequency response
  w, h = signal.freqz(b, a)

  # convert to Hz from rad/sample
  f = w*fs/(2*np.pi)
  # convert the response to dB
  h_dB = 20*np.log10(abs(h))

  plt.figure(figsize=(9,2))
  # cutoff power
  plt.axhline(-3, c='r')

  # cutoff frequencies
  plt.axvline(f_high, c='g')

  # frequency response
  plt.semilogx(f, h_dB, c='k')

  # boilerplate
  plt.grid()
  plt.ylim((-5, 1))
  plt.title("Frequency Response of 5kHz Butterworth Lowpass Filter")
  plt.xlabel("Frequency (Hz)")
  plt.ylabel("Power (dB)")
  plt.show()

def make_waveform_png(wav_file):

  print("Processing file: " + wav_file)

  # using a sample frequency of 2000
  fs, raw = wavfile.read(wav_file)

  # Nyquist frequency for digital filters
  nyq = fs/2

  # 5kHz, a bit higher than C8 note
  f_high = 5000

  # 8th order butterworth bandpass filter
  # frequencies are normalized by nyquist frequency
  b, a = signal.butter(8, f_high/nyq, 'lowpass')
  # plot_LPF(b, a, fs, f_high)

  y = signal.filtfilt(b, a, raw, padlen=150)
  t = np.linspace(0, 1.0, len(y))

  fname_root = wav_file.split('.')[0]

  plt.figure(figsize=(9,2))
  plt.axis('off')
  plt.plot(t, y, c='k')
  fname = fname_root + "-black.png"
  print("Writing black waveform to: " + fname)
  plt.savefig(fname, dpi=300, transparent=True)

  plt.figure(figsize=(9,2))
  plt.axis('off')
  plt.plot(t, y, c='w')
  fname = fname_root + "-white.png"
  print("Writing white waveform to: " + fname)
  plt.savefig(fname, dpi=300, transparent=True)

if __name__ == "__main__":
  if len(sys.argv) == 1 or sys.argv[1] in ["-h", "--help"]:
    print("Usage: `wavepaint song1.wav song2.wav` or `wavepaint --dir somedir`.")
    sys.exit(1)
  elif sys.argv[1] in ["-d", "--dir"] and len(sys.argv) > 1:
    for filename in os.listdir(sys.argv[2]):
      if filename.split('.')[-1] == 'wav':
        make_waveform_png(filename)
  else:
    # list of files
    for filename in sys.argv[1:]:
      make_waveform_png(filename)

  print("Complete!")
